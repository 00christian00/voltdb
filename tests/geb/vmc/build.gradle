/* This file is part of VoltDB.
 * Copyright (C) 2008-2014 VoltDB Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

apply plugin: "groovy"

// The drivers to use
ext.drivers = ["firefox", "chrome", /*"ie", "htmlunit", "phantomjs",*/ "safari"]

repositories {
    mavenCentral() 
}

// Returns the specified project property value, if it is defined; otherwise,
// returns the specified default value
def getProjectPropertyOrDefaultValue(String projectPropertyName, Object defaultValue) {
    if (project.hasProperty(projectPropertyName)) {
        return project.getProperties()[projectPropertyName]
    } else {
        return defaultValue
    }
}

dependencies {
    def gebVersion = getProjectPropertyOrDefaultValue("gebVersion", "0.10.0")
    def seleniumVersion = getProjectPropertyOrDefaultValue("seleniumVersion", "2.44.0")
    def spockVersion = getProjectPropertyOrDefaultValue("spockVersion", "0.7-groovy-2.0")

    // GEB & Spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

    // Drivers
    drivers.each { driver ->
        testCompile "org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersion"
    }
}

sourceSets {
    test {
        groovy {
            srcDir 'src/pages'
            srcDir 'src/tests'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        reports.html.destination = reporting.file("$name/tests")
        reports.junitXml.destination = file("$buildDir/test-results/$name")

        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

        // Set various system properties, either to project property values
        // set on the command line (via -P), or to their default values; for
        // example, to set 'url', use: -Purl=http://my.web.site/
        systemProperty "geb.build.baseUrl", getProjectPropertyOrDefaultValue("url", "http://localhost:8080/")
        systemProperty "debugPrint", getProjectPropertyOrDefaultValue("debugPrint", false)
        systemProperty "windowWidth", getProjectPropertyOrDefaultValue("windowWidth", 1500)
        systemProperty "windowHeight", getProjectPropertyOrDefaultValue("windowHeight", 1000)
        systemProperty "timeoutSeconds", getProjectPropertyOrDefaultValue("timeoutSeconds", 5)
        systemProperty "sleepSeconds", getProjectPropertyOrDefaultValue("sleepSeconds", 0)
        systemProperty "numRowsToInsert", getProjectPropertyOrDefaultValue("numRowsToInsert", 3)
        systemProperty "insertJson", getProjectPropertyOrDefaultValue("insertJson", false)
    }
}