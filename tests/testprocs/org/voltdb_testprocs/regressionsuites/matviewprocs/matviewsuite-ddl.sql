-- Tests for view on join queries.

CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INTEGER NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    ADDRESS VARCHAR(50),
    PRIMARY KEY (CUSTOMER_ID)
);

CREATE PROCEDURE UPDATECUSTOMERS AS
    UPDATE CUSTOMERS SET NAME=?, ADDRESS=? WHERE CUSTOMER_ID=? AND NAME=? AND ADDRESS=?;

CREATE TABLE ORDERS (
    ORDER_ID INTEGER NOT NULL,
    CUSTOMER_ID INTEGER NOT NULL,
    ORDER_TIME TIMESTAMP NOT NULL,
    PRIMARY KEY (ORDER_ID)
);
PARTITION TABLE ORDERS ON COLUMN ORDER_ID;

CREATE PROCEDURE UPDATEORDERS
PARTITION ON TABLE ORDERS COLUMN ORDER_ID PARAMETER 2 AS
    UPDATE ORDERS SET CUSTOMER_ID=?, ORDER_TIME=? WHERE ORDER_ID=? AND CUSTOMER_ID=? AND ORDER_TIME=?;

CREATE TABLE ORDERITEMS (
    ORDER_ID INTEGER NOT NULL,
    PID INTEGER NOT NULL,
    QTY INTEGER NOT NULL
);
PARTITION TABLE ORDERITEMS ON COLUMN ORDER_ID;

CREATE PROCEDURE DELETEORDERITEMS
PARTITION ON TABLE ORDERITEMS COLUMN ORDER_ID AS
    DELETE FROM ORDERITEMS WHERE ORDER_ID=? AND PID=?;

CREATE PROCEDURE UPDATEORDERITEMS
PARTITION ON TABLE ORDERITEMS COLUMN ORDER_ID PARAMETER 2 AS
    UPDATE ORDERITEMS SET PID=?, QTY=? WHERE ORDER_ID=? AND PID=? AND QTY=?;

CREATE TABLE PRODUCTS (
    PID INTEGER NOT NULL,
    PNAME VARCHAR(50) NOT NULL,
    PRICE FLOAT NOT NULL,
    PRIMARY KEY (PID)
);

CREATE PROCEDURE UPDATEPRODUCTS AS
    UPDATE PRODUCTS SET PNAME=?, PRICE=? WHERE PID=? AND PNAME=? AND PRICE=?;

-- replicated join partitioned, no group by column.
CREATE VIEW ORDER_COUNT_GLOBAL (CNT) AS
    SELECT COUNT(*) FROM
    CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID;

CREATE PROCEDURE PROC_ORDER_COUNT_GLOBAL AS
    SELECT COUNT(*) FROM
    CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
    ORDER BY 1;

