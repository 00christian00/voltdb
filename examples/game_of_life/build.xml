<?xml version="1.0" ?>
<project default="main" name="GameOfLife build file">

<!--
***************************************
PATHS AND PROPERTIES
***************************************
-->

<property name='build.dir'             location='obj/' />
<property name='src.dir'               location='src/' />
<property name='debugoutput.dir'       location='debugoutput/' />
<property name='junit.haltonfailure'   value='true' />

<path id='project.classpath'>
    <fileset dir='../../voltdb' >
        <include name='voltdb*.jar' />
    </fileset>
    <pathelement location='${build.dir}' />
    <pathelement path="${java.class.path}"/>
</path>

<!--
***************************************
PRIMARY ENTRY POINTS
***************************************
-->

<target name="main" depends="srccompile, compile" description="default. Compile Java stored procedures and and then run the VoltDB compiler on the stored procedures and schema to generate a catalog" />

<target name="client" depends="srccompile" description="Start the client that controls the game board." >
    <java fork="yes" classname="game.drivers.GameDriver" >
        <jvmarg value="-Xmx512m" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <arg value="100" />         <!-- number of rows -->
        <arg value="100" />         <!-- number of columns -->
        <arg value="4000" />        <!-- initial population -->
        <arg value="0" />           <!-- delay in milliseconds between board evolutions -->
        <arg value="localhost"/>    <!-- comma separated list of servers to connect to -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="gui" depends="srccompile" description="Start the client that renders the game board." >
    <java fork="yes" classname="game.drivers.GUIDriver" >
        <jvmarg value="-Xmx512m" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <arg value="500" />         <!-- delay in milliseconds between board repaints -->
        <arg value="localhost"/>    <!-- comma separated list of servers to connect to -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="server" depends="srccompile, compile" description="Start the server and load the catalog." >
    <java fork="yes" classname="org.voltdb.VoltDB" >
        <jvmarg value="-Djava.library.path=../../voltdb" />
        <jvmarg value="-server" />
        <jvmarg value="-Xmx512m" />
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <arg value="catalog" />
        <arg value="catalog.jar" />
        <arg value="deployment" />
        <arg value="deployment.xml" />
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="compile" depends="srccompile" description="Compile the catalog using the schema and the DDL file" >
    <java fork="yes" failonerror="true" classname="org.voltdb.compiler.VoltCompiler" >
        <arg value="project.xml"/> <!-- project file -->
        <arg value="catalog.jar"/> <!-- output -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<!--
***************************************
CLEANING
***************************************
-->

<target name='clean' description="remove all compiled files">
    <delete includeemptydirs="true" failonerror='false'>
        <fileset dir="${build.dir}" includes="**/*" />
        <fileset dir="${debugoutput.dir}" includes="**/*" />
        <fileset dir="." defaultexcludes="yes" >
            <include name="catalog.jar" />
        </fileset>
    </delete>
</target>

<!--
***************************************
JAVA COMPILATION
***************************************
-->

<target name="srccompile">
    <mkdir dir='${build.dir}' />
    <javac target="1.6" srcdir="${src.dir}" destdir='${build.dir}' debug='true'>
        <classpath refid="project.classpath" />
    </javac>
</target>

</project>
