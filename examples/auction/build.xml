<?xml version="1.0" ?>
<project default="main" name="VoltDB release and auction example app build and test system">

<!--
***************************************
PATHS AND PROPERTIES
***************************************
-->

<property name='catalog_jar' value='auction.jar' />

<condition property="address" value="${address}" else="localhost">
  <isset property="address" />
</condition>

<property name='build.dir'            location='obj/' />
<property name='build.testoutput.dir' location="${build.dir}/testoutput" />
<property name='procedures.dir'       location='procedures/' />
<property name='src.dir'              location='src/' />
<property name='log4j.configuration'  location='../../voltdb/log4j.properties'/>

<path id='project.classpath.server'>
    <pathelement location='${build.dir}' />
    <fileset dir='../../voltdb' >
        <include name='voltdb-*.jar' />
    </fileset>
    <pathelement path="${java.class.path}"/>
</path>

<path id='project.classpath.client'>
    <pathelement location='${build.dir}' />
    <fileset dir='../../voltdb' >
        <include name='voltdbclient-*.jar' />
    </fileset>
    <pathelement path="${java.class.path}"/>
</path>

<!--
***************************************
PRIMARY ENTRY POINTS
***************************************
-->

<target name="main" depends="compile" description="default. Compile Java stored procedures and jar them up and then run VoltCompile on the stored procedures" />

<!--
***************************************
UTILITIES
***************************************
-->

<target name='clean' description="remove all compiled files">
    <delete includeemptydirs="true" failonerror='false'>
        <fileset dir="${build.dir}" includes="**/*" />
        <fileset dir="." defaultexcludes="yes" >
            <include name="${catalog_jar}" />
        </fileset>
    </delete>
</target>


<macrodef name="invoke-java">
  <attribute name="classname"/>
  <element name="javac"/>
  <sequential>
    <java fork="yes" failonerror="true" classname="@{classname}">
        <jvmarg value="-Djava.library.path=../../voltdb" />
        <jvmarg value="-Dlog4j.configuration=file://${log4j.configuration}"/>
        <jvmarg value="-server" />
        <jvmarg value="-Xmx512m" />
        <classpath refid='project.classpath.server' />
        <assertions><disable /></assertions>
        <javac/>
    </java>
  </sequential>
</macrodef>

<!--
***************************************
JAVA & CATALOG COMPILATION
***************************************
-->

<target name="compile"
    description="Example: ant compile    Compile a project xml file and stored procedures into a catalog. You must have the stored procedures specified in the project file in your classpath.">

    <!-- Build the Java code (procs and driver) for the Auction example -->
    <mkdir dir='${build.dir}' />
    <javac target="1.6" srcdir="${procedures.dir}" destdir='${build.dir}' debug='true'>
        <classpath refid="project.classpath.server" />
    </javac>
    <javac target="1.6" srcdir="${src.dir}" destdir='${build.dir}' debug='true'>
        <classpath refid="project.classpath.server" />
    </javac>
    <mkdir dir='${build.dir}/com/auctionexample/datafiles' />
    <copy todir="${build.dir}/com/auctionexample/datafiles" >
        <fileset dir="${src.dir}/com/auctionexample/datafiles" defaultexcludes="yes">
            <include name="*.txt"/>
        </fileset>
    </copy>

    <!-- this next line makes the auto-tests work and has no other use -->
    <copy todir='${build.dir}/com/auctionexample' file='auction-ddl.sql' />

    <!-- Build the VoltDB Catalog for the Auction example -->
    <invoke-java classname="org.voltdb.compiler.VoltCompiler">
      <javac>
        <arg value="project.xml"/>    <!-- project file -->
        <arg value="${catalog_jar}"/> <!-- output -->
      </javac>
    </invoke-java>
</target>

<!--
***************************************
SERVER, EXPORT, & CLIENT TARGETS
***************************************
-->

<target name="server" depends='compile' description="Example: ant server    Start a VoltDB server with the auction catalog.">
    <invoke-java classname="org.voltdb.VoltDB" >
      <javac>
        <arg value="catalog"/>
        <arg value="auction.jar"/>
        <arg value="deployment"/>
        <arg value="deployment.xml"/>
      </javac>
    </invoke-java>
</target>

<target name="export" depends='' description="Example: ant export    Start a VoltDB export receiver for the auction catalog.">
    <invoke-java classname="org.voltdb.exportclient.ExportToFileClient" >
      <javac>
        <arg value="--servers"/>
        <arg value="localhost"/>
        <arg value="--type"/>
        <arg value="csv"/>
        <arg value="--nonce"/>
        <arg value="EXPORTDEMO"/>
        <arg value="--user"/>
        <arg value="voltdb"/>
        <arg value="--password"/>
        <arg value="demo"/>
      </javac>
    </invoke-java>
</target>

<target name="client" description="Example: ant client    Run auction example client.">
    <java fork="yes" classname="com.auctionexample.Client" >
        <classpath refid='project.classpath.client' />
        <assertions><disable/></assertions>
    </java>
</target>

</project>
