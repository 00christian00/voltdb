<?xml version="1.0" ?>
<project default="main" name="build file">

<!--
***************************************
PATHS AND PROPERTIES
***************************************
-->

<property name='build.dir'             location='obj/' />
<property name='src.dir'               location='src/' />
<property name='debugoutput.dir'       location='debugoutput/' />

<path id='project.classpath'>
    <fileset dir='../../voltdb' >
        <include name='voltdb*.jar' />
    </fileset>
    <pathelement location='${build.dir}' />
    <pathelement path="${java.class.path}"/>
</path>

<!--
***************************************
PRIMARY ENTRY POINTS
***************************************
-->
    
<target name="main" depends="srccompile, catalog" description="default. Compile Java stored procedures and then run the VoltDB compiler on the stored procedures and schema to generate a catalog" />

<target name="server" depends="srccompile, catalog" description="Start VoltDB Server.">
    <java fork="yes" classname="org.voltdb.VoltDB">
        <jvmarg value="-Djava.library.path=../../voltdb" />
        <jvmarg value="-server"/>
        <jvmarg value="-Xmx2048m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <jvmarg value="-Dlog4j.configuration=file:log-server.xml" />
        <arg value="catalog"/>
        <arg value="key_value_catalog.jar"/>
        <classpath refid='project.classpath'/>
        <assertions><disable/></assertions>
    </java>
</target>

<target name="client" depends="srccompile" description="Start a key-value client, assume key-value pairs already initialized, single threaded.">
    <java fork="yes" classname="com.ClientKV">
        <jvmarg value="-Xmx1024m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <jvmarg value="-Dlog4j.configuration=file:log-client.xml" />
        <arg value="999999999"/>                                   <!-- maximum transactions per second -->
        <arg value="5"/>                                           <!-- feedback interval (seconds) -->
        <arg value="120"/>                                         <!-- test duration after initialization (seconds) -->
        <arg value="3"/>                                           <!-- seconds to wait before recording latency information -->
        <arg value="localhost"/>                                   <!-- servers to connect to -->
        <arg value="50"/>                                          <!-- key size (max 250) -->
        <arg value="12000"/>                                       <!-- min value size (max 1048576) -->
        <arg value="12000"/>                                       <!-- max value size (max 1048576) -->
        <arg value="100000"/>                                      <!-- number of initial keys/values to populate -->
        <arg value="75"/>                                          <!-- percentage of gets (vs. puts) once populated -->
        <arg value="1"/>                                           <!-- 1 = store payload (text), 2 = base64 encode payload (binary), 3 = base64 encode and compress payload -->
        <classpath refid='project.classpath'/>
        <assertions><disable/></assertions>
    </java>
</target>

<target name="client-threaded" depends="srccompile" description="Start a key-value client, assume key-value pairs already initialized, multi-threaded (1 thread per processor core).">
    <java fork="yes" classname="com.ClientThreadedKV">
        <jvmarg value="-Xmx1024m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <jvmarg value="-Dlog4j.configuration=file:log-client.xml" />
        <arg value="999999999"/>                                   <!-- maximum transactions per second -->
        <arg value="5"/>                                           <!-- feedback interval (seconds) -->
        <arg value="120"/>                                         <!-- test duration after initialization (seconds) -->
        <arg value="3"/>                                           <!-- seconds to wait before recording latency information -->
        <arg value="localhost"/>                                   <!-- servers to connect to -->
        <arg value="50"/>                                          <!-- key size (max 250) -->
        <arg value="12000"/>                                       <!-- min value size (max 1048576) -->
        <arg value="12000"/>                                       <!-- max value size (max 1048576) -->
        <arg value="100000"/>                                      <!-- number of initial keys/values to populate -->
        <arg value="75"/>                                          <!-- percentage of gets (vs. puts) once populated -->
        <arg value="1"/>                                           <!-- 1 = store payload (text), 2 = base64 encode payload (binary), 3 = base64 encode and compress payload -->
        <classpath refid='project.classpath'/>
        <assertions><disable/></assertions>
    </java>
</target>

<target name="catalog" depends="srccompile" description="Create the catalog." >
    <java fork="yes" classname="org.voltdb.compiler.VoltCompiler" >
        <jvmarg value="-Djava.library.path=../../voltdb" />
        <arg value="project.xml"/>             <!-- project file -->
        <arg value="1"/>                       <!-- hosts -->
        <arg value="2"/>                       <!-- sites -->
        <arg value="localhost"/>               <!-- leader -->
        <arg value="key_value_catalog.jar"/>   <!-- catalog -->
        <arg value="0"/>                       <!-- k-safety --> 
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>


<!--
***************************************
CLEANING
***************************************
-->

<target name='clean' description="Remove all compiled files.">
    <delete includeemptydirs="true" failonerror='false'>
        <fileset dir="${build.dir}" includes="**/*" />
        <fileset dir="${debugoutput.dir}" includes="**/*" />
        <fileset dir="." defaultexcludes="yes" >
            <include name="key_value_catalog.jar" />
            <include name="key-value-client.log" />
            <include name="key-value-server.log" />
        </fileset>
    </delete>
</target>

<!--
***************************************
JAVA COMPILATION
***************************************
-->

<target name="srccompile">
    <mkdir dir='${build.dir}' />
    <javac target="1.6" srcdir="${src.dir}" destdir='${build.dir}' debug='true'>
        <classpath refid="project.classpath" />
    </javac>
</target>

</project>
