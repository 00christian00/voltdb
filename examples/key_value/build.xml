<?xml version="1.0" ?>
<project default="default" name="build file">

<property name='catalog' value='key_value_catalog.jar'/>
<import file="../includes/basebuild.xml"/>

<target name="client" description="Start a key-value client, assume key-value pairs already initialized, single threaded.">
    <invoke-java classname="com.ClientKV">
        <jvmarg value="-Xmx1024m"/>
        <jvmarg value="-Dlog4j.configuration=file:log-client.xml" />
        <arg value="999999999"/>                                   <!-- maximum transactions per second (used as starting point only when auto-tuning is on) NOTE: Rounded to thousands -->
        <arg value="5"/>                                           <!-- feedback interval (seconds) -->
        <arg value="120"/>                                         <!-- test duration after initialization (seconds) -->
        <arg value="3"/>                                           <!-- seconds to wait before recording latency information -->
        <arg value="localhost"/>                                   <!-- servers to connect to -->
        <arg value="50"/>                                          <!-- key size (max 250) -->
        <arg value="12000"/>                                       <!-- min value size (max 1048576) -->
        <arg value="12000"/>                                       <!-- max value size (max 1048576) -->
        <arg value="100000"/>                                      <!-- number of initial keys/values to populate -->
        <arg value="75"/>                                          <!-- percentage of gets (vs. puts) once populated -->
        <arg value="1"/>                                           <!-- 1 = store payload (text), 2 = base64 encode payload (binary), 3 = base64 encode and compress payload -->

        <arg value="true" />                                       <!-- Whether auto-tuning should be turned on, allowing the benchmark to determine an optimal TPS for a given target latency -->
        <arg value="10.0" />                                       <!-- Target average transaction call latency (in milliseconds) -->
        <arg value="0.95" />                                       <!-- Adjustment rate: the tuning process decreases the number of requested transactions per second to FACTOR*<observed-TPS> until the target latency is reached -->
        <arg value="1" />                                          <!-- Auto-tuning interval (in seconds) -->

     </invoke-java>
</target>

<target name="client-threaded" description="Start a key-value client, assume key-value pairs already initialized, multi-threaded (1 thread per processor core).">
    <invoke-java classname="com.ClientThreadedKV">
        <jvmarg value="-Xmx1024m"/>
        <jvmarg value="-Dlog4j.configuration=file:log-client.xml" />
        <arg value="999999999"/>                                   <!-- maximum transactions per second (no autu-tuning available for this client - use output from simple client as baseline ) -->
        <arg value="5"/>                                           <!-- feedback interval (seconds) -->
        <arg value="120"/>                                         <!-- test duration after initialization (seconds) -->
        <arg value="3"/>                                           <!-- seconds to wait before recording latency information -->
        <arg value="localhost"/>                                   <!-- servers to connect to -->
        <arg value="50"/>                                          <!-- key size (max 250) -->
        <arg value="12000"/>                                       <!-- min value size (max 1048576) -->
        <arg value="12000"/>                                       <!-- max value size (max 1048576) -->
        <arg value="100000"/>                                      <!-- number of initial keys/values to populate -->
        <arg value="75"/>                                          <!-- percentage of gets (vs. puts) once populated -->
        <arg value="1"/>                                           <!-- 1 = store payload (text), 2 = base64 encode payload (binary), 3 = base64 encode and compress payload -->
   </invoke-java>
</target>

<target name='clean' depends="basebuild.clean">
    <delete includeemptydirs="true" failonerror='false'>
        <fileset dir="." defaultexcludes="yes" >
            <include name="key-value-client.log" />
            <include name="key-value-server.log" />
        </fileset>
    </delete>
</target>

</project>
