
CREATE TABLE TIMEDATA (
   UUID varchar(36) NOT NULL,
   VAL bigint NOT NULL,
   UPDATE_TS timestamp NOT NULL
);
PARTITION TABLE TIMEDATA ON COLUMN UUID;
CREATE INDEX UPTATE_TS_INDEX ON TIMEDATA (UPDATE_TS);
CREATE INDEX VAL_INDEX ON TIMEDATA (VAL);

CREATE VIEW AGG_BY_SECOND (
   SECOND_TS,
   COUNT_VALUES,
   SUM_VALUES
) AS 
   SELECT TRUNCATE(SECOND,UPDATE_TS),COUNT(*),SUM(VAL)FROM TIMEDATA GROUP BY TRUNCATE(SECOND,UPDATE_TS);


CREATE PROCEDURE windowing.Average
   AS
   SELECT SUM(sum_values) / SUM(count_values)     FROM agg_by_second     WHERE second_ts >= TO_TIMESTAMP(SECOND, SINCE_EPOCH(SECOND, NOW) - ?);

CREATE PROCEDURE 
   FROM CLASS windowing.DeleteAfterDate;
PARTITION PROCEDURE DeleteAfterDate ON TABLE TIMEDATA COLUMN UUID;

CREATE PROCEDURE 
   FROM CLASS windowing.DeleteOldestToTarget;
PARTITION PROCEDURE DeleteOldestToTarget ON TABLE TIMEDATA COLUMN UUID;

CREATE PROCEDURE 
   FROM CLASS windowing.InsertAndDeleteAfterDate;
PARTITION PROCEDURE InsertAndDeleteAfterDate ON TABLE TIMEDATA COLUMN UUID;

CREATE PROCEDURE 
   FROM CLASS windowing.InsertAndDeleteOldestToTarget;
PARTITION PROCEDURE InsertAndDeleteOldestToTarget ON TABLE TIMEDATA COLUMN UUID;

CREATE PROCEDURE windowing.MaxValue
   AS
   SELECT MAX(val)     FROM timedata;


